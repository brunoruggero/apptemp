{"ast":null,"code":"var _jsxFileName = \"/home/brunoruggero/cursos/reactjs/apptemp/src/Search.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search(props) {\n  _s();\n  const [cidade, setCidade] = useState(\"\");\n  function searchInput(e) {\n    e.preventDefault();\n    // setCidade(\"\");\n    let currentValue = document.querySelector('input[name=searchInput]').value;\n\n    // Request API\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${currentValue}&appid=ec8686046d75b63040bab1bae08c984a&lang=pt_br&units=metric`;\n    fetch(url).then(response => response.json()).then(data => {\n      const {\n        main,\n        name,\n        sys,\n        weather,\n        wind,\n        clouds,\n        coord\n      } = data;\n      if (sys != undefined) {\n        if (weather != undefined) {\n          const icon = `https://s3-us-west-2.amazonaws.com/s.cdpn.io/162656/${weather[0][\"icon\"]}.svg`;\n          setCidade(`\n                        <div class=\"resultTemp\">\n                            <div class=\"resultTempImg\">\n                                <img src=\"${icon}\"/>\n                                <div class=\"temps\">\n                                    <p class=\"temp\">${Math.round(main.temp)} <span>¬∫C</span></p>\n                                    <p class=\"minmax\">Min: ${Math.round(main.temp_min)} ~ M√°x: ${Math.round(main.temp_max)}</p>\n                                </div>\n                            </div>\n                            <div class=\"resultStatus\">\n                                <p>\n                                    <span class=\"humidity\">Umidade: ${main.humidity}% </span>\n                                    <span class=\"wind\">Vento: ${Math.round(wind.speed)} km/h</span>\n                                </p>\n                                <p class=\"description\">\n                                    <span class=\"descript\">${weather[0]['description']}</span>\n                                    <span class=\"clouds\">Nebulosidade: ${Math.round(clouds.all)}%</span>\n                                </p>\n                            </div>\n                        </div>\n                        <div class=\"resultOther\">\n                            <p class=\"city\">${name}</p>\n                            <p class=\"coord\">${coord.lon}, ${coord.lat}</p>\n                        </div>\n                    `);\n        }\n      } else {\n        setCidade(\"\");\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchWraper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Busca por cidade \\uD83C\\uDFD9\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => searchInput(e),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"searchInput\",\n          placeholder: props.placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Buscar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), cidade != \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchResult\",\n      dangerouslySetInnerHTML: {\n        __html: cidade\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"noResult\",\n      children: \"Nenhum resultado encotrado.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Search, \"n94fTIiL4QO4NNk2ziJobJITSyM=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","Search","props","cidade","setCidade","searchInput","e","preventDefault","currentValue","document","querySelector","value","url","fetch","then","response","json","data","main","name","sys","weather","wind","clouds","coord","undefined","icon","Math","round","temp","temp_min","temp_max","humidity","speed","all","lon","lat","placeholder","__html"],"sources":["/home/brunoruggero/cursos/reactjs/apptemp/src/Search.js"],"sourcesContent":["import {useState} from 'react';\n\nexport default function Search(props){\n\n    const [cidade, setCidade] = useState(\"\");\n\n    function searchInput(e){\n        e.preventDefault();\n        // setCidade(\"\");\n        let currentValue = document.querySelector('input[name=searchInput]').value;\n\n        // Request API\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${currentValue}&appid=ec8686046d75b63040bab1bae08c984a&lang=pt_br&units=metric`;\n        fetch(url)\n        .then(response => response.json())\n        .then(data => {\n            const {main, name, sys, weather, wind, clouds, coord} = data;\n            if(sys != undefined){\n                \n                if(weather != undefined){\n                    const icon = `https://s3-us-west-2.amazonaws.com/s.cdpn.io/162656/${weather[0][\"icon\"]}.svg`;\n                    setCidade(`\n                        <div class=\"resultTemp\">\n                            <div class=\"resultTempImg\">\n                                <img src=\"${icon}\"/>\n                                <div class=\"temps\">\n                                    <p class=\"temp\">${Math.round(main.temp)} <span>¬∫C</span></p>\n                                    <p class=\"minmax\">Min: ${Math.round(main.temp_min)} ~ M√°x: ${Math.round(main.temp_max)}</p>\n                                </div>\n                            </div>\n                            <div class=\"resultStatus\">\n                                <p>\n                                    <span class=\"humidity\">Umidade: ${main.humidity}% </span>\n                                    <span class=\"wind\">Vento: ${Math.round(wind.speed)} km/h</span>\n                                </p>\n                                <p class=\"description\">\n                                    <span class=\"descript\">${weather[0]['description']}</span>\n                                    <span class=\"clouds\">Nebulosidade: ${Math.round(clouds.all)}%</span>\n                                </p>\n                            </div>\n                        </div>\n                        <div class=\"resultOther\">\n                            <p class=\"city\">${name}</p>\n                            <p class=\"coord\">${coord.lon}, ${coord.lat}</p>\n                        </div>\n                    `);\n                }\n            }else{\n                setCidade(\"\");\n            }\n        })\n\n    }\n\n    return(\n        <div className=\"searchWraper\">\n            <div className=\"search\">\n                <h2>Busca por cidade üèôÔ∏è</h2>\n                <form onSubmit={(e) => searchInput(e)}>\n                    <input type=\"text\" name=\"searchInput\" \n                        placeholder={props.placeholder}/>\n                    <input type=\"submit\" value=\"Buscar\" />\n                </form>\n            </div>\n                {\n                    (cidade != \"\")?\n                    <div className=\"searchResult\" dangerouslySetInnerHTML={{__html: cidade}} />:\n                    <div className=\"noResult\">Nenhum resultado encotrado.</div>\n                }\n        </div>\n    )\n}"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAC;AAE/B,eAAe,SAASC,MAAM,CAACC,KAAK,EAAC;EAAA;EAEjC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAExC,SAASK,WAAW,CAACC,CAAC,EAAC;IACnBA,CAAC,CAACC,cAAc,EAAE;IAClB;IACA,IAAIC,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,yBAAyB,CAAC,CAACC,KAAK;;IAE1E;IACA,MAAMC,GAAG,GAAI,qDAAoDJ,YAAa,iEAAgE;IAC9IK,KAAK,CAACD,GAAG,CAAC,CACTE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACV,MAAM;QAACC,IAAI;QAAEC,IAAI;QAAEC,GAAG;QAAEC,OAAO;QAAEC,IAAI;QAAEC,MAAM;QAAEC;MAAK,CAAC,GAAGP,IAAI;MAC5D,IAAGG,GAAG,IAAIK,SAAS,EAAC;QAEhB,IAAGJ,OAAO,IAAII,SAAS,EAAC;UACpB,MAAMC,IAAI,GAAI,uDAAsDL,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAE,MAAK;UAC5FjB,SAAS,CAAE;AAC/B;AACA;AACA,4CAA4CsB,IAAK;AACjD;AACA,sDAAsDC,IAAI,CAACC,KAAK,CAACV,IAAI,CAACW,IAAI,CAAE;AAC5E,6DAA6DF,IAAI,CAACC,KAAK,CAACV,IAAI,CAACY,QAAQ,CAAE,WAAUH,IAAI,CAACC,KAAK,CAACV,IAAI,CAACa,QAAQ,CAAE;AAC3H;AACA;AACA;AACA;AACA,sEAAsEb,IAAI,CAACc,QAAS;AACpF,gEAAgEL,IAAI,CAACC,KAAK,CAACN,IAAI,CAACW,KAAK,CAAE;AACvF;AACA;AACA,6DAA6DZ,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,CAAE;AACvF,yEAAyEM,IAAI,CAACC,KAAK,CAACL,MAAM,CAACW,GAAG,CAAE;AAChG;AACA;AACA;AACA;AACA,8CAA8Cf,IAAK;AACnD,+CAA+CK,KAAK,CAACW,GAAI,KAAIX,KAAK,CAACY,GAAI;AACvE;AACA,qBAAqB,CAAC;QACN;MACJ,CAAC,MAAI;QACDhC,SAAS,CAAC,EAAE,CAAC;MACjB;IACJ,CAAC,CAAC;EAEN;EAEA,oBACI;IAAK,SAAS,EAAC,cAAc;IAAA,wBACzB;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACnB;QAAA,UAAI;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAK,eAC7B;QAAM,QAAQ,EAAGE,CAAC,IAAKD,WAAW,CAACC,CAAC,CAAE;QAAA,wBAClC;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,aAAa;UACjC,WAAW,EAAEJ,KAAK,CAACmC;QAAY;UAAA;UAAA;UAAA;QAAA,QAAE,eACrC;UAAO,IAAI,EAAC,QAAQ;UAAC,KAAK,EAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACnC;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,EAEGlC,MAAM,IAAI,EAAE,gBACb;MAAK,SAAS,EAAC,cAAc;MAAC,uBAAuB,EAAE;QAACmC,MAAM,EAAEnC;MAAM;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,gBAC3E;MAAK,SAAS,EAAC,UAAU;MAAA,UAAC;IAA2B;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QAEjE;AAEd;AAAC,GArEuBF,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}